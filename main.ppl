extern fn println(obj:..Any)
extern fn len(obj:Array<Any>)->Int64
extern fn print(obj:..Any)
extern fn append(obj:..Any)->String

/*
val a = |a:Int32,d:Int32|{
    val b =12
    val c = 12
    println(a+b+c+d)
}
fn boo(callback:Fn(Int32,Int32)){
    callback(3,8)
}
boo(a)
*/
val c = [1,2,30]
val d = c.append(5)
println(len(d))

fn append<T>(target:Array<T>,obj:..T)->Array<T>{
    val l0= len(target) + len(obj)
    val p = mem.malloc(l * sizeof<T>())
    men.copy(p,target)
    return p
}