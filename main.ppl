import core
/*

enum Option<T> {
    None,
    Some(T)
}


fn next()->Option<Int64>{
    return Option.None
}
fn Option<T>.is_some()->Bool{
    return true
}
let a = next()
let b = a.is_some()
*/
fn add<T>(a:T,b:T)->T{
    let c = 12
    return a + b * c
}
let result = add::<Int64>(1,3)
println(result)